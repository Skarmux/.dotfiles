#!/usr/bin/env bash

exists() {
    which $1 &> /dev/null;
}

cd "$HOME" || exit

# ─────────────────────────────────────────────────────────

echo "configure dotfiles..."

export DOTFILES="$HOME/.dotfiles"

if [ -d "$DOTFILES" ]; then
    echo "Dotfiles have already been cloned into the home dir"
else
    echo "Cloning .dotfiles repository into $DOTFILES"
    git clone https://github.com/Skarmux/.dotfiles $DOTFILES
fi

echo "updating dotbot sub-repository to latest..."
cd "$DOTFILES" || "Didn't cd into dotfiles"
git submodule update --init --recursive

set -e

CONFIG="install.conf.yaml"
DOTBOT_DIR="dotbot"

DOTBOT_BIN="bin/dotbot"
BASEDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

cd "${BASEDIR}"
git -C "${DOTBOT_DIR}" submodule sync --quiet --recursive
git submodule update --init --recursive "${DOTBOT_DIR}"

"${BASEDIR}/${DOTBOT_DIR}/${DOTBOT_BIN}" -d "${BASEDIR}" -c "${CONFIG}" "${@}"

# ─────────────────────────────────────────────────────────

DISTRO="`lsb_release -i | cut -f 2-`"
echo "detected distribution: $DISTRO"

# ─────────────────────────────────────────────────────────

case $DISTRO in
    "SteamOS")
        echo "─────────────────────────────────────────────────────────"
        echo "Make SteamOS readable"
        sudo steamos-readonly disable
        sudo pacman-key --init
        sudo pacman-key --populate archlinux holo
        sudo pacman -Scc
        sudo pacman -Syu
        ;;
esac

echo "─────────────────────────────────────────────────────────"
echo "install packages..."

packages=(
    git
    gcc
)

for p in "${packages[@]}"; do
    if ! exists $p; then
        echo "installing $p..."
        case $DISTRO in
            "Debian")
                sudo apt install $p &> /dev/null || echo "FAILED"
                ;;
            "Fedora")
                sudo dnf install $p &> /dev/null || echo "FAILED"
                ;;
            "Arch" | "Manjaro" | "SteamOS")
                sudo pacman -S $p &> /dev/null || echo "FAILED"
                ;;
        esac
    else
        echo "$p already installed" 
    fi
done

if ! exists "hx"; then
    case $DISTRO in
        "Ubuntu")
            sudo add-apt-repository ppa:maveonair/helix-editor
            sudo apt update
            sudo apt install helix &> /dev/null || echo "FAILED"
            ;;
        "Fedora")
            sudo dnf copr enable varlad/helix &> /dev/null || echo "FAILED"
            ;;
        "Arch" | "Manjaro" | "SteamOS")
            sudo pacman -S helix &> /dev/null || echo "FAILED"
            ;;
    esac
fi

# ─────────────────────────────────────────────────────────

if ! exists "starship"; then
    echo "─────────────────────────────────────────────────────────"
    echo "install Starship"
    curl -sS https://starship.rs/install.sh | sh
fi

# ─────────────────────────────────────────────────────────

if ! exists rustc; then
    echo "─────────────────────────────────────────────────────────"
    echo "install rust environment..."
    curl https://sh.rustup.rs -sSf | sh
    $HOME/.cargo/bin/rustup default nightly
    $HOME/.cargo/bin/rustup update
fi

crates=(
    du-dust
    zellij
    gitui
    irust
    bacon
    porsmo
    rg
    sccache
    bat
    exa
    coreutils
    rtx
)

for p in "${crates[@]}"; do
    if ! exists $p; then
        echo "─────────────────────────────────────────────────────────"
        echo "installing $p..."
        cargo install $p &> /dev/null || echo "FAILED"
    else
        echo "$p already installed"  
    fi
done

# ─────────────────────────────────────────────────────────

echo "[build]" >> ~/.cargo/config.toml
echo "rustc-wrapper = \".cargo/bin/sccache\"" >> ~/.cargo/config.toml

echo "─────────────────────────────────────────────────────────"
echo "done."

exit 0
